import numpy
INPUT = "12345678"
INPUT = "80871224585914546619083218645595"
INPUT = "19617804207202209144916044189917"
INPUT = "59728839950345262750652573835965979939888018102191625099946787791682326347549309844135638586166731548034760365897189592233753445638181247676324660686068855684292956604998590827637221627543512414238407861211421936232231340691500214827820904991045564597324533808990098343557895760522104140762068572528148690396033860391137697751034053950225418906057288850192115676834742394553585487838826710005579833289943702498162546384263561449255093278108677331969126402467573596116021040898708023407842928838817237736084235431065576909382323833184591099600309974914741618495832080930442596854495321267401706790270027803358798899922938307821234896434934824289476011"

import math

def one_round(in_str):
	digits = list(map(int, list(in_str)))*10000
	new_digits = []
	BASE_PAT = [0, 1, 0, -1]
	matrix = []
	for i in range(len(digits)):
		pat = []
		for j, num in enumerate(BASE_PAT):
			pat.extend([num] * (i+1))
		pat = pat[1:] + [pat[0]]
		while len(pat) < len(digits):
			pat.extend(pat)
		pat = pat[:len(digits)]
		matrix.append(pat)
	for l in matrix:
		print(l)
	transform = numpy.array(matrix)
	print(transform)
	digits_arr = numpy.array(digits)
	for i in range(101):
		print(digits_arr[:8])
		digits_arr = numpy.matmul(transform, digits_arr)
		digits_arr = abs(digits_arr)
		digits_arr %= 10
		print('.')

one_round(INPUT)